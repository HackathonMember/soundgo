name: CD

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Set environment variables
      - name: Set environment values
        run: echo "TARGET=dev" >> $GITHUB_ENV

      # 3. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # 4. Setup Python for awscli
      - name: Setup Python for AWS CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Install AWS CLI
        run: pip install awscli

      # 5. Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 6. Build, tag, and push Flask image to Amazon ECR
      - name: Build, tag, and push Flask image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: soundgo
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG backend/.
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # 7. Download the current task definition
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition soundgo --query taskDefinition > task-definition.json

      - name: Deploy to ECS
        env:
          ECR_REPO_URI: ${{ secrets.ECR_REPO_URI }}
        run: |
          sed -i "s|REPLACE_WITH_ECR_REPO_URI|${ECR_REPO_URI}|g" aws/task-definition.json

      - name: Render Amazon ECS migration task definition
        id: migration-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: aws/task-definition.json
          container-name: soundgo
          image: soundgo:latest

      # Run migration task
      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: soundgo
          cluster: soundgo-cluster

      # 11. Deploy to Amazon ECS service
      - name: Run Migrations
        id: run-task
        uses: yyoshiki41/ecs-run-task-action@v0.0.9
        with:
          cluster: soundgo-cluster
          task-definition: ${{ steps.migration-task-def.outputs.task-definition }}
          task-definition-family: soundgo
          launch-type: "EC2"
          subnets: '["subnet-0a56214a722366ddd", "subnet-0f3b388677b3be3fc", "subnet-0138e1f7d9120a3c5"]'
          security-groups: '["sg-012ca51c550450a5d"]'
          container-name: soundgo
          command: '["sh", "-c", "flask db upgrade"]'
