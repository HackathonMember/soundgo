name: CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
      # Add any required secrets here

  deploy:
    needs: [ci]
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Set environment variables
      - name: Set environment values
        run: echo "TARGET=dev" >> $GITHUB_ENV

      # 3. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-duration-seconds: 1200

      # 4. Setup Python for awscli
      - name: Setup Python for AWS CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Install AWS CLI
        run: pip install awscli

      # 5. Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 6. Build, tag, and push Flask image to Amazon ECR
      - name: Build, tag, and push Flask image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: soundgo
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # 7. Download the current task definition
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition soundgo --query taskDefinition > task-definition.json

      # 8. Render new task definition with updated image
      - name: Render Amazon ECS task definition
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: soundgo-cluster
          image: latest

      # 9. Register new task definition
      - name: Register new task definition
        id: register-task-def
        run: |
          NEW_TASK_DEF=$(aws ecs register-task-definition --cli-input-json file://${{ steps.render-container.outputs.task-definition }} | jq -r '.taskDefinition.taskDefinitionArn')
          echo "TASK_DEFINITION_ARN=$NEW_TASK_DEF" >> $GITHUB_ENV

      # 10. Run migration task
      - name: Run Migrations
        uses: noelzubin/aws-ecs-run-task@v1.0
        with:
          cluster: soundgo-cluster
          task-definition: soundgo
          subnets: subnet-0a56214a722366ddd,subnet-0f3b388677b3be3fc,subnet-0138e1f7d9120a3c5
          security-groups: sg-012ca51c550450a5d
          assign-public-ip: ENABLED
          override-container: soundgo-cluster
          override-container-command: |
            sh
            -c
            flask db upgrade

      # 11. Deploy to Amazon ECS service
      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: soundgo
          cluster: soundgo